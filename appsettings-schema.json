{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Optimizely Cms Schema",
  "description": "Optimizely CMS Json Schema",
  "type": "object",
  "properties": {
    "EPiServer": {
      "type": "object",
      "properties": {
        "Cms": {
          "type": "object",
          "properties": {
            "Activity": {
              "title": "Contains various options that can be used to configure how activities should be handled within CMS",
              "type": "object",
              "properties": {
                "ArchiveRetentionPeriod": {
                  "type": "integer",
                  "title": "Gets or sets the number of months that activities should remain archived before they are deleted.",
                  "description": "The default value is 12 months. A value of zero (0) indicates that activities should be deleted immediately. A negative value indicates that the archive should be kept indefinitely (not recommended)."
                },
                "TrackContentSaveEvents": {
                  "type": "boolean",
                  "title": "Gets or sets if Content Save events should be tracked and logged as an activity."
                },
                "TruncateDatabaseTimeout": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "Optional timeout that can be set for truncate database operations. If not set the default database timeout is used."
                },
                "TruncateMaximum": {
                  "type": "integer",
                  "title": "The maximum number of activities that are removed every time the truncate job runs. The default value is 100 000 activities. Consider lowering this if you are experiencing timeouts."
                }
              }
            },
            "AspNetAntiForgery": {
              "title": "Contains options for anti forgery.",
              "type": "object",
              "deprecated": true,
              "description": "[Obsolete] Please use the MVC built-in Antiforgery support",
              "properties": {
                "CookieRequireSSL": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "title": "Indicate the value of the Secure property of the cookie should be assigned.",
                  "description": "<c>null</c> indicates the \"requireSSL\" attribute in web.config is being used."
                },
                "CookieSameSiteType": {
                  "title": "Indicate if the value of the SameSite property of the cookie should be assigned.",
                  "enum": [
                    "None",
                    "Lax",
                    "Strict",
                    null
                  ],
                  "description": "<c>null</c> indicates the \"sameSite\" attribute in web.config is being used."
                },
                "EnableSameOriginCheck": {
                  "type": "boolean",
                  "title": "Determines whether <see cref=\"T:EPiServer.Framework.Web.AspNetAntiForgery\" /> should check request for same origin or not."
                },
                "SameSiteAttributeValue": {
                  "deprecated": true,
                  "description": "[Obsolete] Use CookieSameSiteType instead",
                  "title": "Defines SameSite attribute values.",
                  "enum": [
                    "None",
                    "Lax",
                    "Strict"
                  ]
                }
              }
            },
            "BlobProviders": {
              "title": "Specifies how the blob system should be setup",
              "type": "object",
              "properties": {
                "DefaultProvider": {
                  "type": "string",
                  "title": "The name of the default <see cref=\"T:EPiServer.Framework.Blobs.BlobProvider\" />. This provider will be used if no specific provider has been specified."
                }
              }
            },
            "CacheMemoryMonitor": {
              "title": "Options for monitoring and trimming the in-memory cache backing the default <see cref=\"T:EPiServer.Framework.Cache.IObjectInstanceCache\" /> implementation.",
              "type": "object",
              "properties": {
                "DefaultPollInterval": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The default interval between checks of the memory pressure, and potential compacting of the cache if high memory pressure is detected. The default interval is used when the the load is below thresholds, when the pressure goes above the thresholds a shorter interval may be automatically used to keep a closer look on the current memory pressure."
                },
                "EnableMonitor": {
                  "type": "boolean",
                  "title": "Determines if the memory pressure should be monitored or not."
                },
                "InducedGcInterval": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The time to wait for the runtime to perform a Generation 2 Garbage Collection after the cache has been compacted. After this time, an Optimized GC will be induced. If still no GC happens, eventually a Forced GC will be induced. The default is Timespan.Zero which is interpreted as never induce GC, leave GC timing to the runtime."
                },
                "MaxMemoryPressurePercentage": {
                  "type": "integer",
                  "title": "The application memory pressure (in percent), i.e. the amount of memory used in relation to the estimated memory available, that is considered the upper threshold. The application aims to keep memory pressure under this threshold by compacting the cache."
                }
              }
            },
            "ClaimType": {
              "title": "Defines claim types that are synchronized to cms for a user.",
              "description": "By default is claim types defined in <see cref=\"T:System.Security.Claims.ClaimTypes\" /> used.",
              "type": "object",
              "properties": {
                "Email": {
                  "type": "string",
                  "title": "The claim type for email",
                  "description": "Default value is <see cref=\"F:System.Security.Claims.ClaimTypes.Email\" />"
                },
                "GivenName": {
                  "type": "string",
                  "title": "The claim type for GivenName",
                  "description": "Default value is <see cref=\"F:System.Security.Claims.ClaimTypes.GivenName\" />"
                },
                "Surname": {
                  "type": "string",
                  "title": "The claim type for Surname",
                  "description": "Default value is <see cref=\"F:System.Security.Claims.ClaimTypes.Surname\" />"
                }
              }
            },
            "ClientGeolocation": {
              "title": "Contains options for how Geolocation for the client is retrieved.",
              "type": "object",
              "properties": {
                "IPAddressHeader": {
                  "type": "string",
                  "title": "The name of a header that is used to retrieve the IP-address of the client. This setting should be used if the site is located behind a proxy server to get the right IP address of the client."
                },
                "IPAddressHeaderProxyCount": {
                  "type": "integer",
                  "title": "The number of proxy servers in front of the web server listed by IP in the <see cref=\"P:EPiServer.Personalization.ClientGeolocationOptions.IPAddressHeader\" />. Default value is 1."
                },
                "LocationHeader": {
                  "type": "string",
                  "title": "The name of a header that provides geolocation information in the form of a ISO 3166-1 Alpha-2 country code."
                }
              }
            },
            "ClientResource": {
              "title": "Specifies options for how client resources should be handled",
              "type": "object",
              "properties": {
                "Compress": {
                  "type": "boolean",
                  "title": "Controls if compression is applied to the rest stores."
                },
                "Debug": {
                  "type": "boolean",
                  "title": "Make sure debug versions of included scripts are used instead of compressed/optimized versions"
                },
                "JsonResponseBuffer": {
                  "type": "integer",
                  "title": "Gets or sets the buffer for how much is buffered before written to response for json outputs"
                }
              }
            },
            "CmsPolicy": {
              "title": "Option that specifies how CMS policies should be configured",
              "type": "object",
              "properties": {
                "AdminRoles": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies which roles should be added to policy <see cref=\"F:EPiServer.Authorization.CmsPolicyNames.CmsAdmin\" />",
                  "description": "Default values are <see cref=\"F:EPiServer.Authorization.Roles.CmsAdmins\" />"
                },
                "DefaultShellModuleRoles": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies which roles should be added to policy <see cref=\"F:EPiServer.Authorization.CmsPolicyNames.DefaultShellModule\" />",
                  "description": "Default values are <see cref=\"F:EPiServer.Authorization.Roles.CmsAdmins\" /> and <see cref=\"F:EPiServer.Authorization.Roles.CmsEditors\" />"
                },
                "EditRoles": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies which roles should be added to policy <see cref=\"F:EPiServer.Authorization.CmsPolicyNames.CmsEdit\" />",
                  "description": "Default values are <see cref=\"F:EPiServer.Authorization.Roles.CmsEditors\" />, <see cref=\"F:EPiServer.Authorization.Roles.CmsAdmins\" />"
                },
                "PreviewRoles": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies which roles should be added to policy <see cref=\"F:EPiServer.Authorization.CmsPolicyNames.Preview\" />",
                  "description": "<para> In addition to this policy must user be granted access to the content item. </para> <para> Default values are <see cref=\"F:EPiServer.Authorization.Roles.CmsEditors\" />, <see cref=\"F:EPiServer.Authorization.Roles.CmsAdmins\" />. </para>"
                },
                "VisitorGroupAdminRoles": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies which roles should be added to policy <see cref=\"F:EPiServer.Authorization.CmsPolicyNames.VisitorGroupAdmin\" />",
                  "description": "Default values are <see cref=\"F:EPiServer.Authorization.Roles.VisitorGroupAdmins\" />."
                }
              }
            },
            "CompositeFileProvider": {
              "title": "Options to configure <see cref=\"T:EPiServer.Framework.Hosting.ICompositeFileProvider\" />",
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            },
            "Content": {
              "title": "Contains various options that can be used to configure how content should be handled within CMS",
              "type": "object",
              "properties": {
                "ContentCacheSlidingExpiration": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The sliding cache for how long published content is cached. Set to \"0:0:0\" to disable.",
                  "description": "Default value is 12 hours"
                },
                "EnableDynamicProperties": {
                  "type": "boolean",
                  "title": "Gets or sets if DynamicProperties should be enabled.",
                  "deprecated": true,
                  "description": "DynamicProperties are disabled by default.\n[Obsolete] Dynamic properties are no longer supported, it's a legacy feature that will be removed in a future version"
                },
                "InMemoryCopyThreshold": {
                  "type": "integer",
                  "title": "Gets or sets the maximum number of content items that will be copied in one operation using in process memory.",
                  "description": "Default value is 50 content items"
                },
                "InvalidateRemoteCacheForVersions": {
                  "type": "boolean",
                  "title": "Defines if changes to content versions should trigger cache invalidation on remote servers.",
                  "description": "The default value is true"
                },
                "MaximumContentCachedKeys": {
                  "type": "integer",
                  "title": "The maximum number of cache keys that are stored (to avoid repeated string allocations) for content.",
                  "description": "Default value is maximum 100000 cached keys"
                },
                "MaximumContentItemsPerDatabaseRequest": {
                  "type": "integer",
                  "title": "The maximum number of content items that should be returned from a content query in one database request.",
                  "description": "Default value is 2000 content items"
                },
                "MaximumVersions": {
                  "type": "integer",
                  "title": "The maximum number of previously published versions that will be kept.",
                  "description": "Default value is 20"
                },
                "PropertyLazyLoadThreshold": {
                  "type": "integer",
                  "title": "The number of characters when lazy loading should be activated for properties using the <see cref=\"F:EPiServer.Core.PropertyDataType.LongString\" /> data type.",
                  "description": "Default value is 255 characters"
                },
                "ProxyType": {
                  "$ref": "#/$defs/proxyType",
                  "title": "Gets or sets the proxy type to be used in content generation.",
                  "description": "Default value is <see cref=\"F:EPiServer.Core.ProxyType.Auto\" />"
                },
                "StringCompressionThreshold": {
                  "type": "integer",
                  "title": "Set to the number of characters when compression should be activated .",
                  "description": "Default value is 0 meaning no compression is done"
                },
                "VersionCacheSlidingExpiration": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The sliding cache for how long a content version is cached. Set to \"0:0:0\" to disable.",
                  "description": "Default value is 10 minutes"
                }
              }
            },
            "ContentAreaRendering": {
              "title": "Options for specifying content area rendering settings",
              "type": "object",
              "properties": {
                "TemplateTagSelectionStrategy": {
                  "$ref": "#/$defs/missingTemplateTagSelectionStrategy",
                  "title": "Specifies which strategy that should be applied when a ContentArea item has a display option specified that does not match any registered template",
                  "description": "Default value is <see cref=\"F:EPiServer.Web.Templating.MissingTemplateTagSelectionStrategy.NoTag\" />"
                }
              }
            },
            "ContentModel": {
              "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Contains various options that can be used to configure how the content model should be handled during synchronization.",
              "type": "object",
              "properties": {
                "AlwaysUseModelName": {
                  "type": "boolean",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Specifies if the Model name of the class always should be the name of the content type",
                  "description": "The default value is false"
                },
                "EnableModelSyncCommit": {
                  "type": "boolean",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set to false to disable the commit phase when synchronizing typed models. Content types will not be updated automatically.",
                  "description": "The default value is true"
                },
                "EnableSemanticVersioning": {
                  "type": "boolean",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set to true to enable semantic versioning of models.",
                  "description": "The default value is false"
                },
                "IgnoreDataLossValidations": {
                  "type": "boolean",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. This setting specifies how a type change for a content property should be handled. If set to false then property values are loaded and verified if a type change can occur without data loss. If a type change can be done without data loss then the type change is applied. If set to true then the type conversion is not performed if there exists data, then the type needs to be applied manually e.g. from admin mode. <remarks>The default value is false.</remarks>"
                },
                "WaitForInitializeCompletion": {
                  "type": "boolean",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Specifies if the model synchronization should wait for the type initialization to be completed."
                }
              }
            },
            "DataAccess": {
              "title": "Specifies options on how to connect to the database.",
              "type": "object",
              "properties": {
                "CreateDatabaseSchema": {
                  "type": "boolean",
                  "title": "Defines if the database schema should be created automatically when the system is initialized and the database is empty.",
                  "description": "The default value is true."
                },
                "DatabaseMode": {
                  "$ref": "#/$defs/databaseMode",
                  "title": "Defines the mode that the database should be working in.",
                  "description": "The default mode is <see cref=\"F:EPiServer.Data.DatabaseMode.ReadWrite\" />."
                },
                "DatabaseQueryTimeout": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The timeout used for database queries.",
                  "description": "The default timeout is 30 s."
                },
                "DefaultConnectionStringName": {
                  "type": "string",
                  "title": "The name of the default connection string to use.",
                  "description": "The default connection string is 'EPiServerDB'."
                },
                "DisableDateTimeKindValidation": {
                  "type": "boolean",
                  "title": "Defines if the datetime kind of the database should be validated to be UTC when the system is initialized..",
                  "description": "The default value is true."
                },
                "Retries": {
                  "type": "integer",
                  "title": "The number of retries in case a deadlock is detected",
                  "description": "The default number of retries is 3."
                },
                "RetryDelay": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The delay between retries in case a deadlock is detected.",
                  "description": "The default delay is 100 ms."
                },
                "UpdateDatabaseSchema": {
                  "type": "boolean",
                  "title": "Defines if the database schema should be updated automatically when the system is initialized in case the schema has changed.",
                  "description": "The default value is true."
                }
              }
            },
            "Display": {
              "title": "Service that is used to register <see cref=\"T:EPiServer.Web.DisplayOption\" />s",
              "description": "Display options are returned in the order they were added when enumerating over this class.",
              "type": "array",
              "items": {
                "title": "A Display option can be used to register different display options on a content inside a content area",
                "type": "object",
                "properties": {
                  "Description": {
                    "type": "string",
                    "title": "Description for the display option",
                    "description": "If a language resource key is specified it will be automatically translated when sent to the client."
                  },
                  "IconClass": {
                    "type": "string",
                    "title": "Css class for the icon that is used in the display option selector"
                  },
                  "Id": {
                    "type": "string",
                    "title": "Unique id for this option"
                  },
                  "IsReadOnly": {
                    "type": "boolean",
                    "title": "Indicates whether the current object instance is read-only."
                  },
                  "Name": {
                    "type": "string",
                    "title": "The name of the display option",
                    "description": "If a language resource key is specified it will be automatically translated when sent to the client."
                  },
                  "Tag": {
                    "type": "string",
                    "title": "The rendering tag to apply when the option has been selected"
                  }
                }
              }
            },
            "DynamicDataStore": {
              "title": "Specifies options on how the Dynamic Data Store should operate.",
              "type": "object",
              "properties": {
                "AutoRemapStores": {
                  "type": "boolean",
                  "title": "Indicates if stores should be automatically remapped when a type definition changes.",
                  "description": "The default option is to remap on change."
                },
                "AutoResolveTypes": {
                  "type": "boolean",
                  "title": "Indicates if automatic type resolution should be attempted by the Dynamic Data Store.",
                  "description": "The default option is to resolve type automatically."
                },
                "DeleteAllOperationTimeout": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "The extended command timeout to use when deleting all items in a store."
                },
                "SeamlessUpgradeStores": {
                  "type": "boolean",
                  "title": "Indicates if the seamless upgrade mode is enabled. If enabled, <see cref=\"T:EPiServer.Data.Dynamic.StoreDefinition\" /> changes will be enforced in a way that has backward compatible with the previous <see cref=\"T:EPiServer.Data.Dynamic.StoreDefinition\" /> version."
                }
              }
            },
            "Environment": {
              "title": "Specifies environment options for APIs not depending on ASP.NET Core",
              "type": "object",
              "properties": {
                "AppDataPath": {
                  "type": "string",
                  "title": "Gets or sets the absolute path to the directory that contains the private data files.",
                  "description": "Used for data files such as disk based blobs, geolocation database etc"
                },
                "BasePath": {
                  "type": "string",
                  "deprecated": true,
                  "description": "[Obsolete] Renamed to AppDataPath to clarify its usage"
                }
              }
            },
            "EventProvider": {
              "title": "Contains configuration options for the remote event system",
              "type": "object",
              "properties": {
                "Provider": {
                  "type": "string",
                  "title": "The provider that should be used to send and recieve remote events."
                }
              }
            },
            "ExternalApplication": {
              "title": "Contains option that can be used to configure CMS when there is an external delivery application. This option is used by external application like ContentDeliveryApi and CmsUI",
              "type": "object",
              "properties": {
                "OptimizeForDelivery": {
                  "type": "boolean",
                  "title": "Defines whether ContentDeliveryApi and/or CmsUI should be optimized for delivery"
                }
              }
            },
            "FileBlobProvider": {
              "title": "Options for configuring a <see cref=\"T:EPiServer.Framework.Blobs.FileBlobProvider\" /> instance.",
              "type": "object",
              "properties": {
                "KeepStructure": {
                  "type": "boolean",
                  "title": "Set to true to keep created folder structure even if folders are empty",
                  "description": "<para>Some hosting environments (like ASP.NET) keep track of structure under application and might restart application due to changes</para> <para>Default value is false</para>"
                },
                "Path": {
                  "type": "string",
                  "title": "Path to blob repository"
                }
              }
            },
            "FirstRequestInitializer": {
              "title": "Specifies settings for first request initialization",
              "type": "object",
              "properties": {
                "IgnoredPaths": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies for which paths redirection should be ignored"
                },
                "IgnoreRedirectExtensions": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Specifies for which extensions redirection should be ignored",
                  "description": "Default values are { \".css\", \".html\", \".jpg\", \".jpeg\", \".png\", \".gif\", \".js\", \".axd\", \".htm\", \".txt\", \".ico\", \".woff\", \".woff2\", \".ttf\" }"
                }
              }
            },
            "GlobalizationSettings": {
              "title": "Globalization settings that allows to set culture",
              "type": "object",
              "properties": {
                "CultureLanguageCode": {
                  "type": "string",
                  "title": "Gets or sets the culture language code in web.config."
                },
                "UICultureLanguageCode": {
                  "type": "string",
                  "title": "Gets or sets the UI culture language code in web.config."
                },
                "UseBrowserLanguagePreferences": {
                  "type": "boolean",
                  "title": "Specifies if browser language preferences should be used to set content language when language can not be determined from url.",
                  "description": "Default value is false"
                }
              }
            },
            "Html": {
              "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Contains settings for how html content should be handled within CMS",
              "type": "object",
              "properties": {
                "UnEncodedTags": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set which tags should not be encoded when string properties are called at <see cref=\"M:EPiServer.Core.PropertyData.EncodeForWebString(System.String)\" />"
                }
              }
            },
            "JsonFormatter": {
              "title": "Options for configuring <see cref=\"T:EPiServer.Formatters.IJsonOutputFormatter\" /> and <see cref=\"T:EPiServer.Formatters.IJsonInputFormatter\" />",
              "type": "object",
              "properties": {
                "FallbackFormatterType": {
                  "$ref": "#/$defs/formatterType",
                  "title": "Defines the fallback formatter to use when no assembly or type registration applies",
                  "description": "Default value is <see cref=\"F:EPiServer.Formatters.FormatterType.Newtonsoft\" />"
                }
              }
            },
            "LicensePath": {
              "type": "object",
              "properties": {
                "Path": {
                  "type": "string"
                }
              }
            },
            "LinkValidator": {
              "type": "object",
              "properties": {
                "ExternalLinkErrorThreshold": {
                  "type": "integer"
                },
                "ExternalLinkMinimumRequestInterval": {
                  "$ref": "#/$defs/timeSpan"
                },
                "HttpRequestTimeout": {
                  "$ref": "#/$defs/timeSpan"
                },
                "InternalLinkValidation": {
                  "enum": [
                    "Off",
                    "Api",
                    "Request"
                  ]
                },
                "MaximumRunTime": {
                  "$ref": "#/$defs/timeSpan"
                },
                "ProxyAddress": {
                  "$ref": "#/$defs/uri"
                },
                "ProxyDomain": {
                  "type": "string"
                },
                "ProxyPassword": {
                  "type": "string"
                },
                "ProxyUser": {
                  "type": "string"
                },
                "RecheckInterval": {
                  "$ref": "#/$defs/timeSpan"
                },
                "UserAgent": {
                  "type": "string"
                }
              }
            },
            "LinuxEnvironment": {
              "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Specifies linux environment options",
              "type": "object",
              "properties": {
                "MinimumThreadCount": {
                  "type": "integer",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Sets the minimum thread count, helps with database connections. Default is 16 and changes only affect linux operating system.."
                }
              }
            },
            "Localization": {
              "title": "Contains various options that controls how Localization in EPiServer is setup.",
              "type": "object",
              "properties": {
                "FallbackBehavior": {
                  "$ref": "#/$defs/fallbackBehaviors",
                  "title": "Specifies which fallback behaviour to use when a localization string does not exist.",
                  "description": "Default value is FallbackBehaviors.FallbackCulture | FallbackBehaviors.Echo"
                }
              }
            },
            "MappedRoles": {
              "title": "Options for mapped roles,",
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            },
            "Media": {
              "title": "EPiServer media files options",
              "type": "object",
              "properties": {
                "CacheControl": {
                  "type": "string",
                  "title": "Gets the cache control settings. Defaults to \"auto\""
                },
                "DefaultContentType": {
                  "type": "string",
                  "title": "The default content type for a request if the ContentType cannot be determined from context.",
                  "description": "Default value is 'application/octet-stream'"
                },
                "ExpirationTime": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "Gets the cache expiration time."
                }
              }
            },
            "Notification": {
              "title": "Specifies settings used by notification system",
              "type": "object",
              "properties": {
                "NotificationEmailAddress": {
                  "type": "string",
                  "title": "System default email address for notification emails.",
                  "description": "This value is empty by default."
                },
                "NotificationEmailDisplayName": {
                  "type": "string",
                  "title": "System default sender name for no notification emails.",
                  "description": "The default name is 'Episerver'."
                }
              }
            },
            "RegisterAdminUser": {
              "type": "object",
              "properties": {
                "Behavior": {
                  "enum": [
                    "Disabled",
                    "Enabled",
                    "LocalRequestsOnly",
                    "SingleUserOnly"
                  ]
                },
                "Roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "Routing": {
              "title": "Contains settings for content routing",
              "type": "object",
              "properties": {
                "ContentAssetsBasePath": {
                  "$ref": "#/$defs/contentAssetsBasePath",
                  "title": "Gets or sets a value indicating whether url should be based on the owning content url or should be base on the ContentAsset structure.",
                  "description": "Default value is ContentAssetsBasePath.Root."
                },
                "PreferredUrlFormat": {
                  "$ref": "#/$defs/preferredUrlFormat",
                  "title": "Specifies whether hierarchical or simple URL should be used when generating outgoing URL for an <see cref=\"T:EPiServer.Core.IContent\" /> instance.",
                  "description": "Default value is <see cref=\"F:EPiServer.Web.Routing.PreferredUrlFormat.Hierarchical\" /> for backward compatibility."
                },
                "PreferredUrlFormatRedirection": {
                  "$ref": "#/$defs/httpRedirect",
                  "title": "Specifies the redirection behavior when a preferred URL format of a page has been found.",
                  "description": "Default value is <see cref=\"F:EPiServer.Web.Routing.HttpRedirect.None\" />."
                },
                "ShortcutRedirection": {
                  "$ref": "#/$defs/httpRedirect",
                  "title": "Specifies how pages with a shortcut should be handled when routed to",
                  "description": "Default is that page is permanent redirected to the content it is a shortcut for"
                },
                "StrictLanguageRouting": {
                  "type": "boolean",
                  "title": "Defines if strict language determination should be used during routing.",
                  "description": "Default value is true"
                },
                "UrlCacheExpirationTime": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "Gets the content url cache expiration time."
                },
                "UseEditHostForOutgoingMediaUrls": {
                  "type": "boolean",
                  "title": "Specifies that the <see cref=\"T:EPiServer.Web.HostDefinitionType\" /> that is <see cref=\"F:EPiServer.Web.HostDefinitionType.Edit\" /> should be used when generating outgoing URLs for <see cref=\"T:EPiServer.Core.MediaData\" />.",
                  "description": "This is a pre-release API that is UNSTABLE and might not satisfy the compatibility requirements as denoted by its associated normal version."
                },
                "UsePrimaryHostForOutgoingUrls": {
                  "type": "boolean",
                  "title": "Specifies that the <see cref=\"T:EPiServer.Web.HostDefinitionType\" /> that is <see cref=\"F:EPiServer.Web.HostDefinitionType.Primary\" /> should be used when generating outgoing URLs.",
                  "description": "This is a pre-release API that is UNSTABLE and might not satisfy the compatibility requirements as denoted by its associated normal version."
                },
                "UseTrailingSlash": {
                  "type": "boolean",
                  "title": "Gets or sets a value indicating whether a trailing slash should be added for urls to content.",
                  "description": "Default value is true."
                }
              }
            },
            "Scheduler": {
              "title": "Contains settings for the scheduler",
              "type": "object",
              "properties": {
                "ContentCacheSlidingExpiration": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "duration",
                  "title": "The sliding cache for how long content is cached when retrieved from a scheduled job.",
                  "description": "<para>Default value is 1 minutes. Set to \"0:0:0\" to disable or null to use system wide defaults.</para> <para>Use <see cref=\"T:EPiServer.Core.ContentCacheScope\" /> to set a custom expiration within a specific job.</para>"
                },
                "Enabled": {
                  "type": "boolean",
                  "title": "Set to false to disable the scheduler. Default value is true."
                },
                "MaximumExecutionAttempts": {
                  "type": "integer",
                  "title": "Indicates the maximum number times jobs should be executed in case a controlled or uncontrolled server shutdown interrupted their execution. Default value is 10. ///"
                },
                "MinimumExecutionInterval": {
                  "type": "integer",
                  "title": "Indicates the minimum time in seconds between starting executions of jobs. Note that setting a lower value can cause more jobs to execute in parallel which cause higher allocations of resources such as threads.",
                  "description": "Default value is 10."
                },
                "PingTime": {
                  "$ref": "#/$defs/timeSpan",
                  "title": "Scheduler ping time. Default value is 30 seconds."
                }
              }
            },
            "ScriptParser": {
              "title": "Define script parser for string parsing",
              "type": "object",
              "properties": {
                "AttributeNames": {
                  "type": "string",
                  "title": "The names of attributes, separated by commas, can function as either a whitelist or a blacklist depending on the value of the<see cref=\"T:EPiServer.Core.Html.StringParsing.ScriptParserOperationMode\" />. This property is obsolete, use <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.ElementAttributes\" /> instead. If you have already configured this property, you can use <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.ElementAttributes\" /> to get the same result.",
                  "deprecated": true,
                  "description": "[Obsolete] Use ElementAttributes instead"
                },
                "IllegalUriSchemes": {
                  "$ref": "#/$defs/arrayOfString",
                  "title": "Specifies which schemes are considered illegal for links in url, link item and xhtml properties when <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.LoadingMode\" /> and/or <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.SavingMode\" /> is not <see cref=\"F:EPiServer.Core.Html.StringParsing.ScriptParserMode.Keep\" />.",
                  "description": "Value 'javascript' should be added to prevent uris like javascipt:alert('..')."
                },
                "LoadingMode": {
                  "$ref": "#/$defs/scriptParserMode",
                  "title": "Define how string should be parsed when it loads from database."
                },
                "MediaExtensionsToParse": {
                  "$ref": "#/$defs/arrayOfString",
                  "title": "Specifies which media extension that should be parsed for illegal elements/attributes, such as script, during upload.",
                  "description": "Suitable extensions to parse are \".svg\", \".svgz\", \".html\" and \".htm\""
                },
                "MediaUploadMode": {
                  "$ref": "#/$defs/scriptParserMode",
                  "title": "Defines how illegal elements/attributes should be handled for uploaded media matching extensions specified in <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.MediaExtensionsToParse\" />."
                },
                "Mode": {
                  "$ref": "#/$defs/scriptParserOperationMode",
                  "title": "The operation mode for <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.ElementAttributes\" />."
                },
                "SavingMode": {
                  "$ref": "#/$defs/scriptParserMode",
                  "title": "Define how string should be parsed when it saves into database."
                }
              }
            },
            "SearchWordCriterion": {
              "title": "Contains various options that can be used to configure how SearchWordCriterionOptions should be handled within cms.",
              "type": "object",
              "properties": {
                "SearchStringRegexpression": {
                  "type": "string",
                  "title": "Serach reg expression."
                }
              }
            },
            "SimpleAddress": {
              "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Contains settings for how simple address matching should be handled within CMS",
              "type": "object",
              "properties": {
                "RequireLanguageMatch": {
                  "type": "boolean",
                  "title": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Defines if the language must match when resolving a simple address.",
                  "description": "The default value is true"
                }
              }
            },
            "Smtp": {
              "title": "Option for sending email with SMTP.",
              "type": "object",
              "properties": {
                "DeliveryMethod": {
                  "$ref": "#/$defs/deliveryMethod",
                  "title": "Delivery method. Network or PickupDirectory"
                },
                "Network": {
                  "$ref": "#/$defs/network",
                  "title": "Smtp settings for Network delivery method"
                },
                "SenderDisplayName": {
                  "type": "string",
                  "title": "Sender's Display Name",
                  "deprecated": true,
                  "description": "[Obsolete] Setting have never been used, see NotificationOptions for sender on notifications"
                },
                "SenderEmailAddress": {
                  "type": "string",
                  "title": "Sender's Email Address",
                  "deprecated": true,
                  "description": "[Obsolete] Setting have never been used, see NotificationOptions for sender on notifications"
                },
                "SpecifiedPickupDirectory": {
                  "$ref": "#/$defs/specifiedPickupDirectory",
                  "title": "Pickup directory to place email files in"
                }
              }
            },
            "SystemTextJsonSettings": {
              "title": "Used to specify settings for \"System.Text.Json\" based implementations of <see cref=\"T:EPiServer.Formatters.IJsonInputFormatter\" /> and <see cref=\"T:EPiServer.Formatters.IJsonOutputFormatter\" />",
              "type": "object",
              "properties": {
                "SerializerOptions": {
                  "title": "The <see cref=\"T:System.Text.Json.JsonSerializerOptions\" /> used by the formatter",
                  "type": "object",
                  "properties": {
                    "AllowInputFormatterExceptionMessages": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "TagHelper": {
              "title": "Contains settings for how TagHelper behaviors within CMS",
              "type": "object",
              "properties": {
                "SuppressOutputOnEmptyProperty": {
                  "type": "boolean",
                  "title": "Defines if empty html from empty property should be omitted or not when rendering content property using TagHelpers. <see cref=\"T:EPiServer.Web.Mvc.TagHelpers.PropertyAttributeTagHelper\" />"
                }
              }
            },
            "Template": {
              "title": "Provides access to configure cms template system.",
              "type": "object",
              "properties": {
                "RegisterFakeTemplate": {
                  "type": "boolean",
                  "title": "Register a fake template for use when external templates is used"
                },
                "ScanViewsForTemplateRegistration": {
                  "type": "boolean",
                  "title": "Scan views for template registration.",
                  "description": "By default the system will scan for views. Set to false to disable."
                }
              }
            },
            "UrlSegment": {
              "title": "Contains options used to specify how url segments should be created. It is used by <see cref=\"T:EPiServer.Web.IUrlSegmentCreator\" /> and <see cref=\"T:EPiServer.Web.IUrlSegmentGenerator\" />",
              "type": "object",
              "properties": {
                "ReservedSegments": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "Defines segments that are reserved by e.g. IIS"
                },
                "SupportIriCharacters": {
                  "type": "boolean",
                  "title": "Indicates if segments supports IRI characters. If <see cref=\"P:EPiServer.Web.UrlSegmentOptions.ValidCharacters\" /> are set to allow characters that are not allowed in url segments according to url specification this should be set to true.",
                  "description": "Purpose of this is to indicate to for example rendering components that the segment might need to be encoded."
                },
                "UseLowercase": {
                  "type": "boolean",
                  "title": "Indicates if only lowercase characters should be used in url segments",
                  "description": "Default value is true"
                },
                "ValidCharacters": {
                  "type": "string",
                  "title": "Gets or sets the characters that are valid to use as url segment, will be used as argument to Regexp",
                  "description": "Default value is 'A-Za-z0-9\\-_~\\.\\$'"
                }
              }
            },
            "Validation": {
              "title": "Contains options that controls how validation is performed.",
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            },
            "VirtualRole": {
              "title": "Specifies how Virtual roles should be setup.",
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            },
            "VisitorGroup": {
              "type": "object",
              "properties": {
                "EnableSession": {
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "EnableStatistics": {
                  "type": "boolean"
                },
                "StatisticsPersistanceInterval": {
                  "$ref": "#/$defs/timeSpan"
                }
              }
            },
            "ZipArchiveFileProvider": {
              "title": "Options to configure <see cref=\"T:EPiServer.Web.Hosting.ZipArchiveFileProvider\" /> instances.",
              "type": "object",
              "properties": {
                "TrackChanges": {
                  "type": "boolean",
                  "title": "Specifies if zip archives should be tracked for changes during runtime.",
                  "description": "Default value is false."
                }
              }
            }
          }
        },
        "CmsUI": {
          "type": "object",
          "properties": {
            "Admin": {
              "type": "object",
              "properties": {
                "SectionsVisibility": {
                  "type": "object",
                  "properties": {
                    "AdministerGroups": {
                      "type": "boolean"
                    },
                    "AdministerUsers": {
                      "type": "boolean"
                    },
                    "AutomaticPublish": {
                      "type": "boolean"
                    },
                    "FullFeaturedManageWebsites": {
                      "type": "boolean"
                    },
                    "License": {
                      "type": "boolean"
                    },
                    "PermissionsForFunctions": {
                      "type": "boolean"
                    },
                    "PluginManager": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "Application": {
              "title": "Contains application config",
              "type": "object",
              "properties": {
                "ConnectionStringOptions": {
                  "$ref": "#/$defs/connectionStringOptions",
                  "title": "The connection string options",
                  "description": "The default value is DefaultConnectionStringOptions"
                },
                "DisableAutoCreateSchema": {
                  "type": "boolean",
                  "title": "Indicates if the aspnet identity schema should be created automatically"
                }
              }
            },
            "ApprovalNotification": {
              "type": "object",
              "properties": {
                "Immediate": {
                  "type": "boolean"
                }
              }
            },
            "CmsFeature": {
              "type": "object",
              "properties": {
                "SectionsVisibility": {
                  "type": "object",
                  "properties": {
                    "Archiving": {
                      "type": "boolean"
                    },
                    "Categories": {
                      "type": "boolean"
                    },
                    "Frames": {
                      "type": "boolean"
                    },
                    "InterfaceLocalization": {
                      "type": "boolean"
                    },
                    "LanguageFallbacks": {
                      "type": "boolean"
                    },
                    "LanguageReplacements": {
                      "type": "boolean"
                    },
                    "Shortcuts": {
                      "type": "boolean"
                    },
                    "SitesComponent": {
                      "type": "boolean"
                    },
                    "SortIndexProperty": {
                      "type": "boolean"
                    },
                    "SortOrderRuleProperty": {
                      "type": "boolean"
                    },
                    "VisibleInMenuProperty": {
                      "type": "boolean"
                    },
                    "VisitorGroups": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "Dashboard": {
              "type": "object",
              "properties": {
                "DashboardRows": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "*** MUST BE SET THROUGH CODE ***"
                  }
                }
              }
            },
            "HeadlessMode": {
              "type": "object",
              "properties": {
                "HeadlessGadgetEnabled": {
                  "type": "boolean"
                },
                "HeadlessModeEnabled": {
                  "type": "boolean"
                }
              }
            },
            "ImageEditor": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean"
                },
                "SizePresets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Height": {
                        "type": "integer"
                      },
                      "LanguageKey": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "Width": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "SupportedEditExtensions": {
                  "$ref": "#/$defs/arrayOfString"
                },
                "WindowHeight": {
                  "type": "integer"
                },
                "WindowWidth": {
                  "type": "integer"
                }
              }
            },
            "InlineBlockNameProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "*** MUST BE SET THROUGH CODE ***"
              }
            },
            "Navigation": {
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            },
            "ProjectUI": {
              "type": "object",
              "properties": {
                "ProjectGadgetEnabled": {
                  "type": "boolean"
                },
                "ProjectModeEnabled": {
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              }
            },
            "ProtectedModule": {
              "type": "object",
              "properties": {
                "AutoDiscovery": {
                  "$ref": "#/$defs/autoDiscoveryLevel"
                },
                "RootPath": {
                  "type": "string"
                }
              }
            },
            "PublicModule": {
              "type": "object",
              "properties": {
                "AutoDiscovery": {
                  "$ref": "#/$defs/autoDiscoveryLevel"
                },
                "RootPath": {
                  "type": "string"
                }
              }
            },
            "RestCache": {
              "type": "object",
              "properties": {
                "DisableResultCaching": {
                  "type": "boolean"
                },
                "SlidingCacheExpiration": {
                  "$ref": "#/$defs/timeSpan"
                }
              }
            },
            "SecuredComponent": {
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            },
            "SelectionFactories": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "*** MUST BE SET THROUGH CODE ***"
              }
            },
            "Telemetry": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean"
                },
                "IgnoredCompanies": {
                  "$ref": "#/$defs/listOfString"
                },
                "IgnoredDomains": {
                  "$ref": "#/$defs/listOfString"
                }
              }
            },
            "UI": {
              "type": "object",
              "properties": {
                "ApprovalStepRoleUserLimit": {
                  "type": "integer"
                },
                "AutoPublishMediaOnUpload": {
                  "type": "boolean"
                },
                "DisableVersionDeletion": {
                  "type": "boolean"
                },
                "EditUrl": {
                  "$ref": "#/$defs/uri"
                },
                "InlineBlocksInContentAreaEnabled": {
                  "type": "boolean"
                },
                "PermanentEditRetainPeriod": {
                  "$ref": "#/$defs/timeSpan"
                },
                "PreviewTimeout": {
                  "type": "integer"
                },
                "ReadOnlyInfoUrl": {
                  "type": "string"
                },
                "SimplifyPropertyList": {
                  "type": "boolean"
                },
                "ThemeClass": {
                  "type": "string"
                },
                "UIDefaultValueForSetChangedOnPublish": {
                  "type": "boolean"
                },
                "UIShowGlobalizationUserInterface": {
                  "type": "boolean"
                },
                "UsePreviewTokens": {
                  "type": "boolean"
                },
                "UtilUrl": {
                  "$ref": "#/$defs/uri"
                },
                "WebSocketEnabled": {
                  "type": "boolean"
                }
              }
            },
            "UIShellModule": {
              "type": "object",
              "properties": {
                "DebugView": {
                  "type": "boolean"
                }
              }
            },
            "Upload": {
              "type": "object",
              "properties": {
                "AllowedFileExtensions": {
                  "type": "string"
                },
                "FileSizeLimit": {
                  "type": "integer"
                }
              }
            },
            "UserProfileCriterion": {
              "title": "Specifies options on include profile criterion option.",
              "type": "object",
              "properties": {
                "ExcludeProperties": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "A list of user profile properties that exclude to the visitor group criterion."
                },
                "IncludeProperties": {
                  "$ref": "#/$defs/iListOfString",
                  "title": "A list of user profile properties that include to the visitor group criterion."
                }
              }
            },
            "View": {
              "type": "object",
              "description": "*** MUST BE SET THROUGH CODE ***"
            }
          }
        },
        "TinyMce": {
          "type": "object",
          "properties": {
            "TinyMceConfiguration": {
              "title": "Options class for configuring TinyMCE settings usage.",
              "type": "object",
              "properties": {
                "InheritSettingsFromAncestor": {
                  "type": "boolean",
                  "title": "If set to true the setting set on the closest ancestor will be used unless a specific setting has been configured If set to false the default setting will be used unless a specific setting has been configured"
                }
              }
            },
            "TinyMcePropertySettings": {
              "title": "Options for Admin Mode property settings",
              "type": "object",
              "properties": {
                "AllowAddingBlocks": {
                  "type": "boolean",
                  "title": "When true, then blocks can be added to TinyMCE editor"
                },
                "Enabled": {
                  "type": "boolean",
                  "title": "When true, then <see cref=\"T:EPiServer.Cms.TinyMce.PropertySettings.Internal.TinyMcePropertySettingsHandler\" /> is enabled"
                },
                "PasteFromWordImportType": {
                  "$ref": "#/$defs/pasteFromWordImportType",
                  "title": "Defines what should happen when pasting content from Word"
                },
                "ToolbarDefault": {
                  "$ref": "#/$defs/arrayOfString",
                  "title": "Default toolbar"
                },
                "ToolbarExpanded": {
                  "$ref": "#/$defs/arrayOfString",
                  "title": "Expanded toolbar"
                },
                "ToolbarMinimal": {
                  "$ref": "#/$defs/arrayOfString",
                  "title": "Minimal toolbar"
                }
              }
            }
          }
        }
      }
    }
  },
  "$defs": {
    "timeSpan": {
      "type": "string",
      "format": "duration"
    },
    "iListOfString": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "proxyType": {
      "title": "Defines different types of content proxies.",
      "enum": [
        "Auto",
        "Castle",
        "Optimized"
      ]
    },
    "missingTemplateTagSelectionStrategy": {
      "title": "Defines different strategies that could be applied when <see cref=\"T:EPiServer.Web.ITemplateResolver\" /> is requested with a tag but there is no template that matches tag.",
      "enum": [
        "NoTag",
        "InheritedTag"
      ]
    },
    "databaseMode": {
      "title": "Define database mode",
      "enum": [
        "ReadWrite",
        "ReadOnly"
      ]
    },
    "formatterType": {
      "title": "Specifies a formatter type",
      "enum": [
        "Newtonsoft",
        "SystemText"
      ]
    },
    "uri": {
      "type": "string",
      "format": "uri"
    },
    "fallbackBehaviors": {
      "title": "Specifies which behaviours that should be used as fallback when no match is found for the provided key.",
      "enum": [
        "None",
        "Echo",
        "MissingMessage",
        "FallbackCulture",
        "Null"
      ]
    },
    "contentAssetsBasePath": {
      "title": "Specific whether url should be based on the owning content url or should be base on the ContentAsset structure",
      "enum": [
        "Root",
        "ContentOwner"
      ]
    },
    "preferredUrlFormat": {
      "title": "Specifies URL format when generating URL for a routable content.",
      "enum": [
        "Hierarchical",
        "Simple"
      ]
    },
    "httpRedirect": {
      "title": "Specifies how a http request should be redirected",
      "enum": [
        "None",
        "Permanent",
        "Temporary"
      ]
    },
    "arrayOfString": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "scriptParserMode": {
      "title": "Define script parser mode",
      "enum": [
        "Keep",
        "Remove",
        "ThrowException"
      ]
    },
    "scriptParserOperationMode": {
      "title": "Define the operation on <see cref=\"P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.ElementAttributes\" />.",
      "enum": [
        "Allow",
        "Block"
      ]
    },
    "deliveryMethod": {
      "title": "Specifies the delivery method options",
      "enum": [
        "Network",
        "SpecifiedPickupDirectory"
      ]
    },
    "network": {
      "title": "Specifies network settings used for SMTP",
      "type": "object",
      "properties": {
        "Host": {
          "type": "string",
          "title": "Smtp network host"
        },
        "Password": {
          "type": "string",
          "title": "Smtp password"
        },
        "Port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Smtp network port"
        },
        "UserName": {
          "type": "string",
          "title": "Smtp username. Leave empty to disable authentication"
        },
        "UseSsl": {
          "type": [
            "boolean",
            "null"
          ],
          "title": "Should email client use ssl"
        }
      }
    },
    "specifiedPickupDirectory": {
      "title": "Location for mail pickup directory",
      "type": "object",
      "properties": {
        "PickupDirectoryLocation": {
          "type": "string",
          "title": "The path to place email files for pickup"
        }
      }
    },
    "connectionStringOptions": {
      "title": "Represents a single, named connection string.",
      "type": "object",
      "properties": {
        "ConnectionString": {
          "type": "string",
          "title": "Gets or sets the connection string."
        },
        "Name": {
          "type": "string",
          "title": "Gets or sets the name of the connection string.",
          "description": "The default name is 'EPiServerDB'."
        },
        "ProviderName": {
          "type": "string",
          "title": "Gets or sets the provider name.",
          "description": "The default provider name is 'Microsoft.Data.SqlClient'."
        }
      }
    },
    "autoDiscoveryLevel": {
      "enum": [
        "Minimal",
        "Modules"
      ]
    },
    "listOfString": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "pasteFromWordImportType": {
      "title": "This type defines what should happen when pasting content from Ms Word",
      "enum": [
        "Prompt",
        "RemoveFormatting",
        "KeepFormatting"
      ]
    }
  }
}